name: Deploy

on:
  push:
    branches: [main, dev]
  workflow_dispatch:

jobs:
  deploy:
    name: build and upload to s3
    runs-on: ubuntu-latest

    steps:
      - name: Setup Target
        run: |
          if [ "${{github.base_ref}}" == "main" ] || [ "${{github.ref}}" == "refs/heads/main" ]; then
            echo "DEPLOY PRODUCTION"
            AWS_S3=${{ secrets.AWS_S3 }}
            echo "S3=${{ secrets.AWS_S3 }}" >> $GITHUB_ENV
            echo "CLOUD_FRONT=${{ secrets.AWS_CLOUD_FRONT }}" >> $GITHUB_ENV
            echo "POSTFIX=" >> $GITHUB_ENV
          else
            echo "DEPLOY DEVELOPMENT"
            echo "S3=${{ secrets.AWS_S3_DEV }}" >> $GITHUB_ENV
            AWS_S3=${{ secrets.AWS_S3_DEV }}
            echo "CLOUD_FRONT=${{ secrets.AWS_CLOUD_FRONT_DEV }}" >> $GITHUB_ENV
            echo "POSTFIX=:dev" >> $GITHUB_ENV
          fi

          if [ -z ${AWS_S3} ]; then
            echo "AWS_S3 is not define"
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_KEY}}
          aws-region: ${{secrets.AWS_REGION}}
      - name: ðŸ“¦ Install Dependencies
        run: yarn install
      - name: ðŸ§¹ Clear S3
        run: aws s3 rm s3://${{env.S3}} --recursive
      - name: ðŸš€ Deploy S3 and reset CloudFront
        run: |
          yarn build${{env.POSTFIX}}
          aws s3 cp build s3://${{env.S3}} --recursive --acl public-read
          aws cloudfront create-invalidation --distribution-id ${{env.CLOUD_FRONT}} --paths "/*"
